# Allows the chart to install cloud-provider-specific resources
# Supported values: aws, gcp
cloud: ""

# The namespace all Platformatic resources will be saved
namespace: platformatic

# Namespaces where platformatic will interact. If your applications are deployed
# to a namespace other than `platformatic`, add the namespace names to the list
podManagerServiceAccount:
  bindToNamespaces:
    - platformatic

# The location to download Platformatic images from along with credentials
imagePullSecret:
  registry: ghcr.io
  user: ""
  token: ""

wattpro:
  # Configure monitoring of wattpro applications
  monitor:
    enable: true
    # The name of the Prometheus PodMonitor
    name: "wattpro"
    matchLabels:
      platformatic.dev/monitor: "prometheus"
    port: "metrics"

# Platformatic service configuration
# Installation documentation is available at:
services:

  # Intelligent Command Center
  icc:

    # Used in URLs and referencing deployments, pods, and secrets
    name: icc

    # Deploy ICC
    deploy: true

    # Monitor via Prometheus
    monitor:
      enabled: true

    # We have a changelog available at: 
    image:
      repository: ghcr.io/platformatic/plt-icc-3
      pullPolicy: Always
      tag: "latest"

    # TODO Should provide a url to documentation for each feature
    features:
      cache_recommendations:
        enable: false
      risk_service_dump:
        enable: false
      ffc:
        enable: false
      icc_jobs:
        enable: true
      dev_mode:
        enable: false

    # Available levels: debug, info, warn, error
    log_level: warn

    # Supported login methods
    # Change `enable` to `true` to use a method
    # At least one method must be enabled
    login_methods:
      google_oauth:
        enable: false
        client_id: ""
        client_secret: ""
      github_oauth:
        enable: false
        client_id: ""
        client_secret: ""
      password:
        enable: false
      demo:
        enable: false

    # The URL that ICC will be accessed from
    # Some examples:
    #   https://icc.example.com
    #   https://example.com/icc
    public_url: ""

    # The URL to access the ICC database
    # Makes sure to include any required credentials and/or port number
    database_url: ""

    # These values should be autogenerated during installation
    # and only updated occassionally because they could force users to login
    # again if cleared
    secrets:
      icc_session: ""
      control_plane_keys: ""
      user_manager_session: ""

    # Additional pod annotations
    #podAnnotations: {}

    # Additional pod security
    #podSecurityContext: {}

    # Selector labels for the node to provision ICC to
    #nodeSelector: {}

    # Nodes to avoid
    #tolerations: []

    # Nodes to join
    #affinity: {}

  machinist:
    # Used in URLs and referencing deployments, pods, and secrets
    name: machinist

    # We have a changelog available at: 
    image:
      repository: ghcr.io/platformatic/plt-machinist-3
      pullPolicy: Always
      tag: "latest"

    # Set to false if machinist should not be installed
    deploy: true

    monitor:
      enabled: true

    serviceAccountName: "plt-pod-manager"

    # TODO Should provide a url to documentation for each feature
    features:
      event_export:
        enable: false
      dev_mode:
        enable: false

    # Available levels: debug, info, warn, error
    log_level: warn

    # Additional pod annotations
    #podAnnotations: {}

    # Additional pod security
    #podSecurityContext: {}

    # Selector labels for the node to provision ICC to
    #nodeSelector: {}

    # Nodes to avoid
    #tolerations: []

    # Nodes to join
    #affinity: {}

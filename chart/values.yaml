cloud: ""
namespace: platformatic

podManagerServiceAccount:
  bindToNamespaces:
    - platformatic

imagePullSecret:
  name: "image-pull-secret"
  registry: ghcr.io
  user: ""
  token: ""

ingress:
  enabled: false

wattpro:
  monitor:
    enable: true
    name: "wattpro"
    matchLabels:
      platformatic.dev/monitor: "prometheus"
    port: "metrics"

services:
  icc:
    name: icc
    deploy: true
    autoscaling:
      enabled: true
      minReplicas: 1
      maxReplicas: 3
      targetCPUUtilizationPercentage: 80
      targetMemoryUtilizationPercentage: 80
    podAnnotations: {}
    podSecurityContext: {}
    monitor:
      enabled: true
    healthchecks:
      livenessProbe:
        httpGet:
          path: /api/status
          port: http
        failureThreshold: 5
        initialDelaySeconds: 40
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      readinessProbe:
        httpGet:
          path: /api/status
          port: http
        failureThreshold: 5
        initialDelaySeconds: 40
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
    nodeSelector: {}
    tolerations: []
    affinity: {}
    image:
      repository: ghcr.io/platformatic/plt-icc-3
      pullPolicy: Always
      tag: "demo"
    env:
      # Shared
      PORT: 3042
      DEV_K8S: false
      PLT_EXTERNAL_TRAFFICANTE_URL: http://icc.platformatic.svc.cluster.local/trafficante
      PLT_EXTERNAL_ACTIVITIES_URL: http://icc.platformatic.svc.cluster.local/activities
      PLT_EXTERNAL_COMPLIANCE_URL: http://icc.platformatic.svc.cluster.local/compliance
      PLT_EXTERNAL_CRON_URL: http://icc.platformatic.svc.cluster.local/cron
      PLT_EXTERNAL_USER_MANAGER_URL: http://icc.platformatic.svc.cluster.local/user-manager
      PLT_EXTERNAL_RISK_MANAGER_URL: http://icc.platformatic.svc.cluster.local/risk-manager
      PLT_EXTERNAL_RISK_SERVICE_URL: http://icc.platformatic.svc.cluster.local/risk-service
      PLT_EXTERNAL_METRICS_URL: http://icc.platformatic.svc.cluster.local/metrics
      PLT_EXTERNAL_SCALER_URL: http://icc.platformatic.svc.cluster.local/scaler
      PLT_MAIN_SERVICE_URL: http://main.plt.local
      PLT_CONTROL_PLANE_URL: http://control-plane.plt.local
      PLT_COMPLIANCE_URL: http://compliance.plt.local
      PLT_MACHINIST_URL: http://machinist.platformatic.svc.cluster.local
      PLT_FEATURE_CACHE: "false"
      PLT_FEATURE_CACHE_RECOMMENDATIONS: "false"
      PLT_FEATURE_RISK_SERVICE_DUMP: "false"
      PLT_FEATURE_FFC: "false"
      PLT_CRON_DISABLE_ICC_JOBS: "false"
      PLT_ICC_LOGGER_LEVEL: "warn"

      # Main service
      DEMO_LOGIN: "false"
      DEV: false
      VITE_API_BASE_URL: ""
      VITE_SERVER_URL: ""
      VITE_TERMS_VERSION: 1
      VITE_SUPPORTED_LOGINS: "github,google"

      # Scaler
      PLT_SCALER_COOLDOWN: 300
      PLT_SCALER_PERIODIC_TRIGGER: 60
      PLT_METRICS_TIME_RANGE: 60

      # Compliance
      PLT_COMPLIANCE_RULES_DIR: "./rules"

      # Risk service
      PLT_RISK_SERVICE_LOGGER_LEVEL: "info"

      # Risk Cold Storage
      PLT_COLD_STORAGE_LOGGER_LEVEL: "info"

    secrets:
      # Shared
      PLT_ICC_SESSION_SECRET: ""
      # Main service
      PLT_GITHUB_OAUTH_CLIENT_ID: ""
      PLT_GITHUB_OAUTH_CLIENT_SECRET: ""
      PLT_GOOGLE_OAUTH_CLIENT_ID: ""
      PLT_GOOGLE_OAUTH_CLIENT_SECRET: ""
      PLT_MAIN_SESSION_SECRET_KEY: ""
      # Activities
      PLT_ACTIVITIES_DATABASE_URL: ""
      # User Manager
      PLT_USER_MANAGER_DATABASE_URL: ""
      PLT_USER_MANAGER_SESSION_SECRET_KEY: ""
      # Compliance
      PLT_COMPLIANCE_DATABASE_URL: ""
      # Control Plane
      PLT_CONTROL_PLANE_DATABASE_URL: ""
      PLT_CONTROL_PLANE_SECRET_KEYS: ""
      # Cron
      PLT_CRON_DATABASE_URL: ""
      # Trafficante
      PLT_TRAFFICANTE_DATABASE_URL: ""
      # Scaler
      PLT_SCALER_DATABASE_URL: ""
      # Risk Cold Storage
      PLT_COLD_STORAGE_DATABASE_URL: ""
    resources:
      limits:
        cpu: 2
        memory: 2048Mi
      requests:
        cpu: 1
        memory: 1024Mi
    service:
      type: NodePort
      port: 80
      targetPort: 3042

  machinist:
    name: machinist
    deploy: true
    autoscaling:
      enabled: true
      minReplicas: 1
      maxReplicas: 3
      targetCPUUtilizationPercentage: 80
      targetMemoryUtilizationPercentage: 80
    podAnnotations: {}
    podSecurityContext: {}
    monitor:
      enabled: true
    serviceAccountName: "plt-pod-manager"
    healthchecks:
      livenessProbe:
        httpGet:
          path: /status
          port: http
        failureThreshold: 3
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      readinessProbe:
        httpGet:
          path: /status
          port: http
        failureThreshold: 3
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
    nodeSelector: {}
    tolerations: []
    affinity: {}
    image:
      repository: ghcr.io/platformatic/plt-machinist-3
      pullPolicy: Always
      tag: "demo"
    env:
      PLT_LOGGER_LEVEL: "warn"
      PLT_DEV_MODE: false
      PLT_PORT: 3000
      PLT_K8S_PROVIDER: "k8s"
      PLT_DISABLE_EVENT_EXPORT: true
      PLT_K8S_INSTALLED_NAMESPACE: "platformatic"
    secrets: {}
    resources:
      limits:
        cpu: 1
        memory: 1Gi
      requests:
        cpu: 0.5
        memory: 512Mi
    service:
      type: NodePort
      port: 80
      targetPort: 3000

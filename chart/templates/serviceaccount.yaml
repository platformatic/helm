# Main service account
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "application.serviceAccountName" $ }}
  namespace: {{ .namespace | default "platformatic" }}
  {{- if eq .Values.cloud "aws"}}
  annotations:
    {{- with .Values.services.icc.elasticacheRoleArn}}
    eks.amazonaws.com/role-arn: {{ . }}
    {{- end}}
  {{- end}}

{{- with .Values.podManagerServiceAccount }}
{{- $accountName := "plt-pod-manager" }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ $accountName }}
  namespace: {{ $.Values.namespace | default "platformatic" }}
  {{- with .annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ $accountName }}
  namespace: {{ $namespace }}
rules:
  - apiGroups:
      - ""
      - apps
      - networking.k8s.io
    resources:
      - pods
      - deployments
      - replicasets
      - replicationcontrollers
      - ingresses
      - services
    verbs:
      - get
      - list
  - apiGroups:
      - ""
      - apps
    resources:
      - deployments
      - replicasets
      - replicationcontrollers
      - pods
    verbs:
      - update
      - patch

{{- range $namespace := .bindToNamespaces }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ $accountName }}-{{ . }}
  namespace: {{ . }}
subjects:
  - kind: ServiceAccount
    name: {{ $accountName }}
    namespace: {{ $.Values.namespace }}
roleRef:
  kind: ClusterRole
  name: {{ $accountName }}
  apiGroup: rbac.authorization.k8s.io
{{- end }}
{{- end }}
